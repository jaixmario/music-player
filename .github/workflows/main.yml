name: Build and Release APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Decode Android keystore
        run: |
          # Decode the base64 keystore secret into a .jks file
          echo "${{ secrets.RELEASE_KEYSTORE_BASE64 }}" > keystore_base64.txt
          base64 -d keystore_base64.txt > release-keystore.jks

      - name: Build Release APK
        run: ./gradlew assembleRelease

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Release-APK
          path: app/build/outputs/apk/release/app-release.apk

      - name: Send Telegram Notification
        if: ${{ success() }}
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_TO }}
        run: |
          # Extract commit message and escape Markdown special chars
          raw_msg=$(jq -r .head_commit.message < "$GITHUB_EVENT_PATH")
          safe_msg=$(echo "$raw_msg" | sed -E 's/([_*[])/\\\1/g')
          short_sha=${GITHUB_SHA::7}
          branch=${GITHUB_REF#refs/heads/}
          ist_date=$(TZ="Asia/Kolkata" date '+%Y-%m-%d %H:%M:%S')
          # Compose MarkdownV2 message
          msg="**Repository:** ${GITHUB_REPOSITORY} 📦\n"
          msg+="**Branch:** ${branch} 🌿\n"
          msg+="**Commit:** \`${short_sha}\` 🆔\n"
          msg+="**Message:** ${safe_msg} ✏️\n"
          msg+="**Status:** succeeded ✅\n"
          msg+="**Date (IST):** ${ist_date} 📅\n"
          msg+="**Run:** [View Workflow](${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}) 🔗"
          # Send the message via Telegram Bot API
          curl -s -X POST https://api.telegram.org/bot$TELEGRAM_TOKEN/sendMessage \
            -d chat_id=$TELEGRAM_CHAT_ID \
            -d parse_mode=MarkdownV2 \
            -d text="$msg"
          # Send APK file if it exists
          if [ -f "app/build/outputs/apk/release/app-release.apk" ]; then
            curl -s -X POST https://api.telegram.org/bot$TELEGRAM_TOKEN/sendDocument \
              -F chat_id=$TELEGRAM_CHAT_ID \
              -F parse_mode=MarkdownV2 \
              -F caption="**Release APK** 🚀" \
              -F document="@app/build/outputs/apk/release/app-release.apk"
          fi
          # Send lint report if it exists
          if [ -f "app/build/reports/lint-results-release.html" ]; then
            curl -s -X POST https://api.telegram.org/bot$TELEGRAM_TOKEN/sendDocument \
              -F chat_id=$TELEGRAM_CHAT_ID \
              -F parse_mode=MarkdownV2 \
              -F caption="**Lint Report** 🐞" \
              -F document="@app/build/reports/lint-results-release.html"
          fi