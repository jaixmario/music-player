name: Android Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build Signed Release APK
    runs-on: ubuntu-latest

    steps:
      - name: 1Ô∏è‚É£ Checkout code
        uses: actions/checkout@v4

      - name: 2Ô∏è‚É£ Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: 3Ô∏è‚É£ Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: 4Ô∏è‚É£ Fix gradlew and permissions
        run: |
          sudo apt-get update
          sudo apt-get install -y dos2unix
          dos2unix ./gradlew
          chmod +x ./gradlew

      - name: 5Ô∏è‚É£ Decode release.keystore
        env:
          KEYSTORE_FILE_BASE64: ${{ secrets.KEYSTORE_FILE_BASE64 }}
        run: echo "$KEYSTORE_FILE_BASE64" | base64 --decode > ${{ github.workspace }}/release.keystore

      - name: 6Ô∏è‚É£ Build signed APK
        env:
          KEYSTORE_PATH:      ${{ github.workspace }}/release.keystore
          KEYSTORE_PASSWORD:  ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS:          ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD:       ${{ secrets.KEY_PASSWORD }}
        run: ./gradlew assembleRelease

      - name: 7Ô∏è‚É£ Install Telebot and Python deps
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install pyTelegramBotAPI

      - name: 8Ô∏è‚É£ Send to Telegram via Telebot
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          python3 <<EOF
          import telebot
          import os
          import subprocess
          from datetime import datetime
          import pytz

          bot = telebot.TeleBot(os.environ["TELEGRAM_BOT_TOKEN"])
          chat_id = os.environ["TELEGRAM_CHAT_ID"]

          # Version and commit info
          def get_output(cmd):
              return subprocess.check_output(cmd, shell=True).decode().strip()

          version_name = get_output("grep 'versionName' app/build.gradle.kts | cut -d '\"' -f2")
          version_code = get_output("grep 'versionCode' app/build.gradle.kts | grep -o '[0-9]\\+'")
          commit_hash = get_output("git rev-parse --short HEAD")
          commit_message = get_output("git log -1 --pretty=%s")
          commit_author = get_output("git log -1 --pretty=format:'%an'")

          # IST timestamp
          ist_time = datetime.now(pytz.timezone("Asia/Kolkata")).strftime("%d %b %Y, %I:%M %p")

          # Message
          caption = f"""‚úÖ Android Build Completed
          
          *Version:* v{version_name} ({version_code})
          *Commit:* `{commit_hash}`
          *Message:* `{commit_message}`
          *Author:* *{commit_author}*
          *Time:* {ist_time} (IST)
          
          üì¶ *Artifact:* app-release.apk"""

          # Send document
          apk_path = "app/build/outputs/apk/release/app-release.apk"
          with open(apk_path, "rb") as f:
              bot.send_document(chat_id, f, caption=caption, parse_mode="Markdown")
          EOF