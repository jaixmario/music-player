name: Android Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build Signed Release APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Convert gradlew to Unix format
        run: |
          sudo apt-get update
          sudo apt-get install -y dos2unix
          dos2unix ./gradlew

      - name: Give execute permission to gradlew
        run: chmod +x ./gradlew

      - name: Decode release.keystore
        env:
          KEYSTORE_FILE_BASE64: ${{ secrets.KEYSTORE_FILE_BASE64 }}
        run: echo "$KEYSTORE_FILE_BASE64" | base64 --decode > ${{ github.workspace }}/release.keystore

      - name: Build signed release APK
        env:
          KEYSTORE_PATH:      ${{ github.workspace }}/release.keystore
          KEYSTORE_PASSWORD:  ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS:          ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD:       ${{ secrets.KEY_PASSWORD }}
        run: ./gradlew assembleRelease

      - name: Upload Release APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release.apk
          path: app/build/outputs/apk/release/app-release.apk

      - name: Send APK and report to Telegram
        if: always()
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          # Extract version info from Gradle file
          VERSION_NAME=$(grep 'versionName' app/build.gradle.kts | sed 's/.*".*".*/\1/')
          VERSION_CODE=$(grep 'versionCode' app/build.gradle.kts | grep -o '[0-9]\+')

          # Get latest commit details
          COMMIT_HASH=$(git rev-parse --short HEAD)
          COMMIT_MESSAGE=$(git log -1 --pretty=%s)
          COMMIT_AUTHOR=$(git log -1 --pretty=format:'%an')

          # Escape message for Telegram Markdown
          ESCAPED_COMMIT_MESSAGE=$(echo "$COMMIT_MESSAGE" | sed 's/[\`_*[]/\\&/g')

          # Prepare caption
          CAPTION="*APK Build Info*\n*Version:* v$VERSION_NAME ($VERSION_CODE)\n*Commit:* \`$COMMIT_HASH\`\n*Message:* $ESCAPED_COMMIT_MESSAGE\n*Author:* $COMMIT_AUTHOR"

          # Send function
          send_file() {
            FILE=$1
            if [ -f "$FILE" ]; then
              curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendDocument" \
                -F chat_id="${TELEGRAM_CHAT_ID}" \
                -F parse_mode="Markdown" \
                -F document=@"$FILE" \
                -F caption="$CAPTION"
              echo "✅ Sent: $FILE"
            else
              echo "⚠️ File not found: $FILE"
            fi
          }

          send_file "app/build/outputs/apk/release/app-release.apk"
          send_file "build/reports/problems/problems-report.html"